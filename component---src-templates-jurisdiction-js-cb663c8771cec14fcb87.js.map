{"version":3,"sources":["webpack:///./node_modules/copy-to-clipboard/index.js","webpack:///./node_modules/toggle-selection/index.js","webpack:///./src/templates/jurisdiction.js","webpack:///./src/components/EmailTemplate.jsx","webpack:///./src/components/Buttons.js"],"names":["deselectCurrent","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","Jurisdiction","pageContext","title","textTransform","example","sample","EmailTemplateWrapper","styled","div","COLORS","WHITE","BLACK","CopyRequestButton","requestText","useState","copied","setCopied","useEffect","setTimeout","color","size","inverted","disabled","onClick","copy","EmailTemplate","goal","toggleable","requestHtml","requestMarkdown","showContent","setShowContent","className","dangerouslySetInnerHTML","__html","defaultProps","ButtonCSS","css","props","BLUE","Button","button","ButtonLink","a"],"mappings":"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","file":"component---src-templates-jurisdiction-js-cb663c8771cec14fcb87.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n};\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement(\"span\");\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = \"unset\"; // prevents scrolling to the end of the page\n\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\"; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = \"pre\"; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function (e) {\n      e.stopPropagation();\n\n      if (options.format) {\n        e.preventDefault();\n\n        if (typeof e.clipboardData === \"undefined\") {\n          // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"];\n          window.clipboardData.setData(format, text);\n        } else {\n          // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n    document.body.appendChild(mark);\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n    var successful = document.execCommand(\"copy\");\n\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;","require(\"core-js/modules/es6.array.for-each\");\n\nmodule.exports = function () {\n  var selection = document.getSelection();\n\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n\n  var active = document.activeElement;\n  var ranges = [];\n\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) {\n    // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' && selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function (range) {\n        selection.addRange(range);\n      });\n    }\n\n    active && active.focus();\n  };\n};","import React from \"react\"\nimport Scaffolding from \"../components/Scaffolding\"\nimport Head from \"../components/Head\"\nimport EmailTemplate from \"../components/EmailTemplate\"\n\nconst Jurisdiction = ({ pageContext }) => {\n  return (\n    <Scaffolding>\n      <Head title=\"Home\" />\n      <h1 style={{ textTransform: \"uppercase\" }}>FOIL {pageContext.title}</h1>\n      <p>{pageContext.example}</p>\n      <EmailTemplate sample=\"\" />\n    </Scaffolding>\n  )\n}\n\nexport default Jurisdiction\n","import copy from \"copy-to-clipboard\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { COLORS } from \"../constants\"\nimport { H3, P } from \"./Typography\"\nimport { Button } from \"../components/Buttons\"\n\nconst EmailTemplateWrapper = styled.div`\n  background: ${COLORS.WHITE[800]};\n  border-radius: 2px;\n  border: 1px solid ${COLORS.WHITE[500]};\n  border-bottom: 6px solid ${COLORS.WHITE[300]};\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1em;\n    &:hover {\n      cursor: pointer;\n    }\n    h3 {\n      font-weight: 700;\n      color: ${COLORS.BLACK[300]};\n      padding: 0;\n      text-decoration: underline;\n    }\n  }\n  .goal {\n    padding: 0.5em 1em;\n    border-top: 1px solid ${COLORS.WHITE[500]};\n    p {\n      color: ${COLORS.BLACK[900]};\n    }\n  }\n  .request-template {\n    background: ${COLORS.WHITE[700]};\n    border-top: 2px solid ${COLORS.WHITE[600]};\n    padding: 1.5em 2.5em 2.5em;\n    color: ${COLORS.BLACK[900]};\n    font-size: 14px;\n    font-family: Courier;\n    line-height: 120%;\n  }\n`\n\nconst CopyRequestButton = ({ requestText }) => {\n  const [copied, setCopied] = useState(false)\n  useEffect(() => {\n    setTimeout(() => setCopied(false), 2500)\n  }, [copied])\n\n  return (\n    <Button\n      color=\"black\"\n      size=\"sm\"\n      inverted\n      disabled={copied}\n      onClick={() => {\n        setCopied(true)\n        copy(requestText, { format: \"text/plain\" })\n      }}\n    >\n      {copied ? \"Copied!\" : \"Copy Request to Clipboard\"}\n    </Button>\n  )\n}\n\nconst EmailTemplate = ({\n  goal,\n  toggleable,\n  requestHtml,\n  requestMarkdown,\n  title,\n}) => {\n  let [showContent, setShowContent] = useState(!toggleable)\n  return (\n    <EmailTemplateWrapper>\n      <div\n        className=\"header\"\n        onClick={() => {\n          if (toggleable) setShowContent(!showContent)\n        }}\n      >\n        <H3>{title}</H3>\n        {toggleable && (\n          <Button color=\"black\" size=\"sm\" inverted>\n            {showContent ? \"Hide\" : \"View\"}\n          </Button>\n        )}\n      </div>\n      {goal && (\n        <div className=\"goal\">\n          <P>\n            <b>What this reveals:</b> {goal}\n          </P>\n        </div>\n      )}\n      {showContent && (\n        <div className=\"request-template\">\n          <CopyRequestButton requestText={requestMarkdown} />\n          <br />\n          <div dangerouslySetInnerHTML={{ __html: requestHtml }} />\n        </div>\n      )}\n    </EmailTemplateWrapper>\n  )\n}\n\nEmailTemplate.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  toggleable: PropTypes.bool,\n}\n\nEmailTemplate.defaultProps = {\n  title: \"\",\n  body: \"\",\n  toggleable: true,\n}\n\nexport default EmailTemplate\n","import styled, { css } from \"styled-components\"\nimport { COLORS } from \"../constants\"\n\nexport const ButtonCSS = css`\n  box-sizing: border-box;\n  border-radius: 4px;\n  text-decoration: none;\n  justify-content: center;\n  text-align: center;\n  transition: 0.1s color;\n  cursor: pointer;\n  svg {\n    position: relative;\n    top: 2px;\n    right: 3px;\n    max-height: 18px;\n  }\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${props => {\n    // Color X - Inverted\n    // Color X\n    if (props.color === \"blue\" && props.inverted) {\n      return css`\n        background: transparent;\n        border: 2px solid ${COLORS.BLUE[500]};\n        color: ${COLORS.BLUE[500]};\n      `\n    }\n    if (props.color === \"blue\") {\n      return css`\n        background: ${COLORS.BLUE[500]};\n        border: 1px solid ${COLORS.BLUE[300]};\n        border-bottom: 4px solid ${COLORS.BLUE[400]};\n        color: ${COLORS.WHITE[900]};\n      `\n    }\n    if (props.color === \"black\" && props.inverted) {\n      return css`\n        background: transparent;\n        border: 2px solid ${COLORS.BLACK[500]};\n        color: ${COLORS.BLACK[500]};\n      `\n    }\n    if (props.color === \"black\") {\n      return css`\n        background: ${COLORS.BLACK[500]};\n        border: 1px solid ${COLORS.BLACK[300]};\n        border-bottom: 4px solid ${COLORS.BLACK[400]};\n        color: ${COLORS.WHITE[900]};\n      `\n    }\n  }}\n  ${props => {\n    if (props.disabled) {\n      return css`\n        opacity: 0.5;\n        cursor: not-allowed;\n      `\n    }\n  }}\n  ${props => {\n    if (props.size === \"xs\") {\n      return `\n        padding: .3em .6em;\n        font-size: 0.8em;\n        svg {\n          height: 0.8em;\n          width: 0.8em;\n        }\n      `\n    }\n    if (props.size === \"sm\") {\n      return `\n        padding: 0.5em 1em;\n        font-size: 0.8em;\n        svg {\n          height: 0.8em;\n          width: 0.8em;\n        }\n      `\n    }\n    if (props.size === \"md\" || !props.size) {\n      return `\n        padding: 0.6em 1.2em;\n        font-size: 1em;\n        svg {\n          height: 1em;\n          width: 1em;\n        }\n      `\n    }\n    if (props.size === \"lg\") {\n      return `\n        padding: 0.8em 1.4em;\n        font-size: 1.4em;\n        svg {\n          height: 1.2em;\n          width: 1.2em;\n          margin-left: 0.5em;\n        }\n      `\n    }\n    if (props.size === \"xl\") {\n      return `\n        width: 100%;\n        padding: 1em 2em;\n        font-size: 1.6em;\n        text-align: center;\n        svg {\n          height: 1.2em;\n          width: 1.2em;\n          margin: 0 0.25em;\n        }\n      `\n    }\n    return `\n      padding: 0.6em 1.2em;\n      font-size: 1.1em;\n    `\n  }}\n`\n\nexport const Button = styled.button`\n  ${ButtonCSS}\n`\n\nexport const ButtonLink = styled.a`\n  ${ButtonCSS}\n`\n"],"sourceRoot":""}